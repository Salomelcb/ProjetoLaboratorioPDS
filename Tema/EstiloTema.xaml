 <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Tema/CoresTema.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- ───────────  Cores ─────────── -->
    <SolidColorBrush x:Key="SideBarColor"      Color="#6b7b6b"/>
    <LinearGradientBrush x:Key="BackgroundGradient"
                         StartPoint="0,0" EndPoint="1,1" Opacity="0.80">
        <GradientStop Color="#FFFDFCEB" Offset="0"/>
        <GradientStop Color="#FFE0F5E7" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PrimaryColor"      Color="#ffffff"/>
    <SolidColorBrush x:Key="SecundaryColor"    Color="#77866b"/>
    <SolidColorBrush x:Key="TertiaryColor"     Color="#D8EAD3"/>
    <SolidColorBrush x:Key="btnClose"          Color="#6f8964"/>

    <!-- ───────────  PopupButtonStyle (itens de menu)  ─────────── -->
    <Style x:Key="PopupButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background"              Value="Transparent"/>
        <Setter Property="BorderBrush"             Value="Transparent"/>
        <Setter Property="Foreground"              Value="Transparent"/>
        <Setter Property="BorderThickness"         Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment"   Value="Center"/>
        <Setter Property="Padding"                 Value="0"/>
        <Setter Property="Height"                  Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ───────────  MenuButtonStyle (hambúrguer)  ─────────── -->
    <Style x:Key="MenuButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width"  Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border" Background="Transparent">
                        <Viewbox Width="20" Height="20" Margin="0 6 0 0">
                            <Canvas Width="512" Height="512">
                                <!-- três barras -->
                                <Path Data="M32 64h448c18 0 32-14 32-32S498 0 480 0H32C14 0 0 14 0 32s14 32 32 32z"
                                      Fill="{StaticResource SecundaryColor}"/>
                                <Path Data="M32 224h448c18 0 32-14 32-32s-14-32-32-32H32C14 160 0 174 0 192s14 32 32 32z"
                                      Fill="{StaticResource SecundaryColor}" Canvas.Top="128"/>
                                <Path Data="M32 384h448c18 0 32-14 32-32s-14-32-32-32H32C14 320 0 334 0 352s14 32 32 32z"
                                      Fill="{StaticResource SecundaryColor}" Canvas.Top="256"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="Transparent"/>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource TertiaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="Transparent"/>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource TertiaryColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ───────────  IconButtonsStyle (min/max/close)  ─────────── -->
    <!-- 1. Cores de estado -->
    <SolidColorBrush x:Key="btnCloseNormal" Color="#6F8964"/>
    <SolidColorBrush x:Key="btnCloseHover"  Color="#FF3B30"/>

    <!-- 2. Estilo para os botões da janela -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background"      Value="Transparent"/>
        <Setter Property="Cursor"          Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height"          Value="25"/>
        <Setter Property="Width"           Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bd" CornerRadius="4"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Path x:Name="ico"
                          Data="{TemplateBinding Content}"
                          Fill="{StaticResource QuaternaryColor}"
                          Width="10" Height="10" Stretch="Uniform"/>
                    </Border>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>

                        <!-- Hover para minimizar, maximizar, restaurar -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
                            </Trigger>

                            <!-- Hover específico do Fechar -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource btnCloseHover}"/>
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryColor}"/>
                        </MultiTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryColor}"/>
                            </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Estilo global para os botões -->
    <Style x:Key="BotoesVerdes" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource QuaternaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecundaryColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
     <!-- Thumb -->
    <Style TargetType="Thumb" x:Key="SoftThumbStyle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{StaticResource ScrollBaseColor}" 
                        CornerRadius="3"
                        MinHeight="20" MinWidth="20">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource ScrollHoverColor}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
    </Style>
     
    <Style TargetType="DataGrid">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
    </Style>

    <!-- Estilo da ScrollBar -->
    <Style TargetType="ScrollBar">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Track que liga o ScrollViewer -->
                        <Track x:Name="PART_Track" Grid.Row="1"
                           IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource SoftThumbStyle}"/>
                            </Track.Thumb>
                        </Track>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="8"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="8"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
     <!-- Histograma -->
    <Style x:Key="HistogramaToolTipStyle" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="#F4F6FA"
                        BorderBrush="#C7D3C2"
                        BorderThickness="1"
                        CornerRadius="6"
                        Padding="8,4"
                        SnapsToDevicePixels="True">
                        <Border.Effect>
                            <DropShadowEffect Color="#999999"
                                          BlurRadius="8"
                                          ShadowDepth="2"
                                          Opacity="0.3"/>
                        </Border.Effect>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#3E4E3E"/>
    </Style>


</ResourceDictionary>
